package gui;


import javax.swing.JCheckBox;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import java.awt.GridLayout;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import net.miginfocom.swing.MigLayout;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.BevelBorder;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.TitledBorder;
import javax.swing.UIManager;
import javax.swing.JButton;
import java.awt.BorderLayout;
import javax.swing.JRadioButton;
import javax.swing.BoxLayout;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;

import Utils.GuiDBConnector;
import java.awt.GridBagLayout;


public class prepareGameView extends JPanel {
	private final ButtonGroup difficultyBtnsGrp = new ButtonGroup();
	private List<String> TopicsList;
	private List<JCheckBox> topicsCheckBoxes;
	private JPanel topicsPanel;

	public prepareGameView() {
		initialize();
		
		this.setVisible(true);
	}
	
	static JPanel startPrepareGame() {
		prepareGameView view = new prepareGameView();
		@SuppressWarnings("unused")
		PrepareGameController controller = new PrepareGameController(null, view);
		return view;
	}
	
	private void initialize() {
		topicsPanel = new JPanel();
		topicsPanel.setBorder(new TitledBorder(null, "Topics", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		
		JPanel difficultyPanel = new JPanel();
		difficultyPanel.setBorder(new TitledBorder(null, "Difficulty", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		
		JPanel btnPanel = new JPanel();
		GroupLayout groupLayout = new GroupLayout(this);
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.TRAILING)
				.addGroup(Alignment.LEADING, groupLayout.createSequentialGroup()
					.addContainerGap()
					.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
						.addComponent(difficultyPanel, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(topicsPanel, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 209, GroupLayout.PREFERRED_SIZE))
					.addGap(69)
					.addComponent(btnPanel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(117, Short.MAX_VALUE))
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(23)
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(topicsPanel, GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
							.addGap(18))
						.addGroup(groupLayout.createSequentialGroup()
							.addGap(97)
							.addComponent(btnPanel, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
							.addGap(25)))
					.addGap(18)
					.addComponent(difficultyPanel, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
					.addGap(85))
		);
		
		getTopics();
		topicsPanel.setLayout(new GridLayout(1, 0, 0, 0));
		
		
		JButton btnNewButton = new JButton();
		btnPanel.add(btnNewButton);
		btnNewButton.setIcon(new ImageIcon(prepareGameView.class.getResource("/resources/start-icon.png")));
		difficultyPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		
		JRadioButton hardRadioBtn = new JRadioButton("Hard");
		difficultyPanel.add(hardRadioBtn);
		difficultyBtnsGrp.add(hardRadioBtn);
		
		JRadioButton easyRadioBtn = new JRadioButton("Easy");
		difficultyPanel.add(easyRadioBtn);
		easyRadioBtn.setSelected(true);
		difficultyBtnsGrp.add(easyRadioBtn);
		this.setLayout(groupLayout);
		
		addTopicsCheckBoxes();
	}
	
	/**
	 * 
	 * @return user selected topics
	 */
	List<String> getUserSelectedTopics() {
		List<String> lst = new LinkedList<String>();
		for (JCheckBox box : topicsCheckBoxes) {
			if (box.isSelected())
				lst.add(box.getText());
		}
		return lst;
	}
	
	private void addTopicsCheckBoxes() {
		topicsCheckBoxes = new LinkedList<JCheckBox>();
		for (String topic : TopicsList) {
			JCheckBox box = new JCheckBox();
			box.setText(topic);
			topicsPanel.add(box);
		}
	}
	
	private void getTopics() {
		//topicsList =GuiDBConnector.getTopics();
		//for now - fixed values
		TopicsList = new LinkedList<String>();

		TopicsList.add("Geography");
		TopicsList.add("Cinema");
		TopicsList.add("Music");
		TopicsList.add("Television");
		TopicsList.add("General");
		TopicsList.add("Israel");
	}
}
